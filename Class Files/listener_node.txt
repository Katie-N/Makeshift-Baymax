import rclpy
from rclpy.node import Node

from std_msgs.msg import String


class Listener(Node):

	def __init__(self):
		# Initialize node with name 'Listener'
		super().__init__('Listener')

		# Create subscription to 'talk_listen_topic' with msg type String
		# <self.listener_callback> is called every time this receives a msg
		self.subscription = self.create_subscription(
		    String,
		    'talk_listen_topic',
		    self.listener_callback,
		    10)

	def listener_callback(self, msg):
		self.get_logger().info(f'I heard: "{msg.data}"') # <.info> can be exchanged with [debug, info, warn, error, fatal] for different severities
		
def main(args=None):
    rclpy.init(args=args)

    listener_node = Listener()

    rclpy.spin(listener_node)

    
    listener_node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
